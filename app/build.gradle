apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.ando.jetpack"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'com.squareup.okhttp3:okhttp:4.8.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"

    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
//    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.2.5"

    // Kotlin components
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //ÂçèÁ®ãÊ†∏ÂøÉÂ∫ì
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.kotlin_coroutines"
    //ÂΩìÂâçÂπ≥Âè∞ÊâÄÂØπÂ∫îÁöÑÂπ≥Âè∞Â∫ì
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.kotlin_coroutines"

    //JetPack
    //https://codelabs.developers.google.com/codelabs/android-room-with-a-view-kotlin/index.html?index=..%2F..index#0

    // Room components
    // https://developer.android.google.cn/topic/libraries/architecture/room
    // https://developer.android.google.cn/training/data-storage/room
    implementation "androidx.room:room-runtime:$rootProject.room_version"
    implementation "androidx.room:room-ktx:$rootProject.room_version"
    //implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$rootProject.room_version"
    // For Kotlin use kapt instead of annotationProcessor
    androidTestImplementation "androidx.room:room-testing:$rootProject.room_version"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.lifecycle_version"

    // Material design
    implementation "com.google.android.material:material:$rootProject.material_version"

    //WorkManager
    //https://developer.android.com/topic/libraries/architecture/workmanager
    //ÂêéÂè∞Â§ÑÁêÜÊåáÂçó üëâ https://developer.android.com/guide/background
    implementation "androidx.work:work-runtime-ktx:$rootProject.work_version" // Kotlin + coroutines
    implementation "androidx.work:work-rxjava2:$rootProject.work_version"   // optional - RxJava2 support
    //implementation "androidx.work:work-gcm:$work_version"     // optional - GCMNetworkManager support
    androidTestImplementation "androidx.work:work-testing:$rootProject.work_version" // optional - Test helpers

}