apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

def version = rootProject.ext.version
def dep = rootProject.ext.dependencies

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.ando.jetpack"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    viewBinding {
        enabled = true
    }

    dataBinding {
        enabled true
    }

}

//Âè¶Â§ñ‰∏ÄÁßçÂÜôÊ≥ï üëâ implementation dep["app_compat"]
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "androidx.arch.core:core-testing:$version.core_testing"

    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
//    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.2.5"

    // Kotlin components
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$version.kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version.kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version.kotlin_coroutines"

    //JetPack Architecture Components

    // Room components
    implementation "androidx.room:room-runtime:$version.room"
    implementation "androidx.room:room-ktx:$version.room"
    //implementation "androidx.room:room-rxjava2:$version.room"
    kapt "androidx.room:room-compiler:$version.room"
    // For Kotlin use kapt instead of annotationProcessor
    androidTestImplementation "androidx.room:room-testing:$version.room"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$version.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version.lifecycle"
    // Saved state module
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$version.lifecycle_save_state"
    // Annotation processor
    // kapt "androidx.lifecycle:lifecycle-compiler:$version.lifecycle"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$version.lifecycle"

    // optional - helpers for implementing LifecycleOwner in a Service
    //implementation "androidx.lifecycle:lifecycle-service:$version.lifecycle"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    //implementation "androidx.lifecycle:lifecycle-process:$version.lifecycle"
    // optional - ReactiveStreams support for LiveData
    //implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$version.lifecycle"


    // Paging
    implementation "androidx.paging:paging-runtime:$version.paging"
    // alternatively - without Android dependencies for tests
    testImplementation "androidx.paging:paging-common:$version.paging"
    // optional - RxJava2 support
    implementation "androidx.paging:paging-rxjava2:$version.paging"
    // optional - Guava ListenableFuture support
    implementation "androidx.paging:paging-guava:$version.paging"


    // Material design
    implementation "com.google.android.material:material:$version.material"

    //WorkManager
    //https://developer.android.com/topic/libraries/architecture/workmanager
    //ÂêéÂè∞Â§ÑÁêÜÊåáÂçó üëâ https://developer.android.com/guide/background
    implementation "androidx.work:work-runtime-ktx:$version.work" // Kotlin + coroutines
    implementation "androidx.work:work-rxjava2:$version.work"   // optional - RxJava2 support
    //implementation "androidx.work:work-gcm:$version.work"     // optional - GCMNetworkManager support
    androidTestImplementation "androidx.work:work-testing:$version.work" // optional - Test helpers


    //OkHttp
    implementation 'com.squareup.okhttp3:okhttp:4.8.0'
    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$version.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$version.retrofit"
    implementation "com.squareup.retrofit2:retrofit-mock:$version.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$version.okhttp_logging"

}